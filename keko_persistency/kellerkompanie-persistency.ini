[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values




[createTableLoadout]
SQL1_1  = CREATE TABLE IF NOT EXISTS loadout (
SQL1_2  = LoadoutID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
SQL1_3  = LoadoutKey CHAR(32) NOT NULL,
SQL1_4  = PlayerUID CHAR(100) NOT NULL,
SQL1_5  = PlayerName CHAR(255) NOT NULL,
SQL1_6  = Time DATETIME NOT NULL,
SQL1_7  = Loadout TEXT NOT NULL,
SQL1_8  = MedicClass TINYINT NOT NULL,
SQL1_9  = EngineerClass TINYINT NOT NULL,
SQL1_10  = Rank ENUM('PRIVATE','CORPORAL','SERGEANT','LIEUTENANT','CAPTAIN','MAJOR','COLONEL') NOT NULL,
SQL1_11 = Position TEXT NOT NULL,
SQL1_12 = UNIQUE (LoadoutKey, PlayerUID))
SQL1_13 = CHARACTER SET 'utf8'
SQL1_14 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[setPlayerLoadout]
SQL1_1 = REPLACE INTO loadout (LoadoutKey, PlayerUID, PlayerName, Time, Loadout, MedicClass, EngineerClass, Rank, Position) VALUES 
SQL1_2 = (?, ?, ?, NOW(), ?, ?, ?, ?, ?);

SQL1_INPUTS = 1,2,3,4,5,6,7,8

Prepared Statement = true



[getPlayerLoadout]
SQL1_1 = SELECT (Loadout, MedicClass, EngineerClass, Rank, Position) FROM loadout WHERE LoadoutKey = ? AND PlayerUID = ?;
SQL1_INPUTS = 1,2

Prepared Statement = true